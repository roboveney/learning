<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Shrug_python" id="2" localization="8" tooltip="" x="389" y="119">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.345108, [3, -0.433333, 0], [3, 0.216667, 0]], [0.16563, [3, -0.216667, 0], [3, 0.183333, 0]], [0.16563, [3, -0.183333, 0], [3, 0.266667, 0]], [0.177902, [3, -0.266667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.0199001, [3, -0.433333, 0], [3, 0.216667, 0]], [0.0199001, [3, -0.216667, 0], [3, 0.183333, 0]], [0.0199001, [3, -0.183333, 0], [3, 0.266667, 0]], [0.0199001, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[-1.23023, [3, -0.433333, 0], [3, 0.216667, 0]], [-1.19034, [3, -0.216667, 0], [3, 0.183333, 0]], [-1.50481, [3, -0.183333, 0], [3, 0.266667, 0]], [-1.11978, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[-0.94652, [3, -0.433333, 0], [3, 0.216667, 0]], [-1.55705, [3, -0.216667, 0.20568], [3, 0.183333, -0.174037]], [-2.08567, [3, -0.183333, 0.0141319], [3, 0.266667, -0.0205555]], [-2.10622, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.024, [3, -0.433333, 0], [3, 0.216667, 0]], [0.024, [3, -0.216667, 0], [3, 0.183333, 0]], [0.024, [3, -0.183333, 0], [3, 0.266667, 0]], [0.7268, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.929562, [3, -0.433333, 0], [3, 0.216667, 0]], [0.837522, [3, -0.216667, 0], [3, 0.183333, 0]], [0.943368, [3, -0.183333, 0], [3, 0.266667, 0]], [0.613558, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.107338, [3, -0.433333, 0], [3, 0.216667, 0]], [0.056716, [3, -0.216667, 0.0155104], [3, 0.183333, -0.0131242]], [0.0214341, [3, -0.183333, 0], [3, 0.266667, 0]], [0.292952, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[-0.119694, [3, -0.433333, 0], [3, 0.216667, 0]], [0.151824, [3, -0.216667, 0], [3, 0.183333, 0]], [-0.0844119, [3, -0.183333, 0.214779], [3, 0.266667, -0.312406]], [-1.42973, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[1.29474, [3, -0.433333, 0], [3, 0.216667, 0]], [1.38524, [3, -0.216667, -0.0196651], [3, 0.183333, 0.0166397]], [1.40365, [3, -0.183333, 0], [3, 0.266667, 0]], [0.967996, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[1.03541, [3, -0.433333, 0], [3, 0.216667, 0]], [1.0937, [3, -0.216667, -0.0582922], [3, 0.183333, 0.0493242]], [2.08567, [3, -0.183333, -0.011965], [3, 0.266667, 0.0174036]], [2.10307, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.0248001, [3, -0.433333, 0], [3, 0.216667, 0]], [0.0248001, [3, -0.216667, 0], [3, 0.183333, 0]], [0.0248001, [3, -0.183333, 0], [3, 0.266667, 0]], [0.6864, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[1.03396, [3, -0.433333, 0], [3, 0.216667, 0]], [0.92351, [3, -0.216667, 0.00906451], [3, 0.183333, -0.00766997]], [0.91584, [3, -0.183333, 0.00766997], [3, 0.266667, -0.0111563]], [0.627448, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[0.0398421, [3, -0.433333, 0], [3, 0.216667, 0]], [0.110406, [3, -0.216667, 0], [3, 0.183333, 0]], [0.030638, [3, -0.183333, 0.0289566], [3, 0.266667, -0.0421187]], [-0.10282, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([1.25, 1.9, 2.45, 3.25])
keys.append([[-0.113558, [3, -0.433333, 0], [3, 0.216667, 0]], [-0.10282, [3, -0.216667, 0], [3, 0.183333, 0]], [-0.10282, [3, -0.183333, 0], [3, 0.266667, 0]], [1.13972, [3, -0.266667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
